name: Development CI

on:
  push:
    branches:
    - development

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Run unit tests
      run: ./test/test.sh

    - name: Upload coverage as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: unit-tests-coverage
        path: coverage/coverage.xml

  codacy-coverage-reporter:
    needs: test
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Download code coverage results
      uses: actions/download-artifact@v2
      with:
        name: unit-tests-coverage

    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
  
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Build docker image
      run: ./build.sh

    - name: Log in to DO Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Publish docker image to DO Container Registry
      run: ./publish.sh

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      STAGING_KUBERNETES_KUBECONFIG: ${{ secrets.STAGING_KUBERNETES_KUBECONFIG }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1

    - name: Decode kubeconfig
      run: echo $STAGING_KUBERNETES_KUBECONFIG | base64 --decode > $GITHUB_WORKSPACE/deploy/kubeconfig.yml

    - name: Deploy to DigitalOcean Kubernetes
      run: ./deploy/deploy.sh

    # TODO add rollout status check

  integration-test:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      VOTE_PUBLIC_IP: ${{ secrets.STAGING_PUBLIC_IP }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Await for deployment
      run: sleep 20

    - name: Run integration tests using CodeceptJS
      run: ./test/integration/integration_test.sh

    - name: Upload results as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: integration-tests-result
        path: test/integration/output/index.html
