name: Production CI

on:
  push:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Run unit tests
      run: ./test/test.sh

    - name: Upload coverage as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: unit-tests-coverage
        path: coverage/coverage.xml

  codacy-coverage-reporter:
    needs: test
    runs-on: ubuntu-latest
    env:
      COVERAGE_DIRECTORY: ${{ github.workspace }}/coverage/
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Download code coverage results
      uses: actions/download-artifact@v2
      with:
        name: unit-tests-coverage
        path: ${{ env.COVERAGE_DIRECTORY }}

    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: ${{ env.COVERAGE_DIRECTORY }}coverage.xml
  
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build docker image
      run: ./build.sh

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DO Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Publish docker image to DO Container Registry
      run: ./publish.sh

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1

    - name: Decode kubeconfig
      run: echo $PRODUCTION_KUBERNETES_KUBECONFIG | base64 --decode > $GITHUB_WORKSPACE/deploy/kubeconfig.yml

    - name: Deploy to DigitalOcean Kubernetes
      run: ./deploy/deploy.sh

    # TODO add rollout status check
